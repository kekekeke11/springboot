消费者端
RabbitMQ分布式事务解决方案，最终一致性思想。(可以暂时不一致，但是最终要一致)
需要保证以下三要素
1、确认生产者一定要将数据投递到MQ服务器中（采用MQ消息确认机制）
2、MQ消费者消息能够正确消费消息，采用手动ACK模式（注意重试幂等性问题）
3、如何保证第一个事务先执行，采用补偿机制，在创建一个补单消费者进行监听，如果订单没有创建成功，进行补单。

如果生产者投递消息到MQ服务成功
场景1：
    如果消费者消费消息失败了，生产者是否需要回滚事务？不需要！
    解决方法：
        消费采用ack手动应答的方式，采用MQ进行补偿重试机制，注意MQ补偿幂等性 问题
问题：
    如何确认生产者一定会将数据投递到MQ服务器中？confirm机制（确认应答机制）。

场景2：
    如果生产者发送消息到MQ服务器失败呢？
    解决方法：
        使用生产者重试机制进行发消息。

场景3：
    如何保证第一个事务先执行？生产者投递消息到MQ服务器端成功，消费者消费消息成功了，但是订单事务回滚了。



案例：
点外卖案例。
用户下单后，调用订单服务，然后订单服务调用派单服务通知外卖人员送单，
这时候订单系统与派单系统采用MQ异步通讯。

